/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by 
 * Appcelerator. It should not be modified by hand.
 */
package org.appcelerator.kitchensink;

import org.mozilla.javascript.Scriptable;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiContext;
import org.appcelerator.kroll.KrollModule;

import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;

public final class KitchensinkApplication extends TiApplication {

	protected HashMap<String, String[]> moduleBindings = new HashMap<String, String[]>();
	
	@Override
	public void onCreate() {
		super.onCreate();
		
		appInfo = new KitchensinkAppInfo(this);
		stylesheet = new ApplicationStylesheet();
		
		onAfterCreate();
	}
	
	@Override
	protected void bootModules(TiContext context) {
		//TODO: Make Modules independent of context
		// Analytics module
			
		String[] Analytics_bindings = new String[] {
		};
		moduleBindings.put("Analytics", Analytics_bindings);
		ti.modules.titanium.analytics.AnalyticsModule Analytics_module = new ti.modules.titanium.analytics.AnalyticsModule(context);
		modules.add(Analytics_module);
		// Android module
			
		String[] Android_bindings = new String[] {
		};
		moduleBindings.put("Android", Android_bindings);
		ti.modules.titanium.ui.android.AndroidModule Android_module = new ti.modules.titanium.ui.android.AndroidModule(context);
		modules.add(Android_module);
		// UI module
			
		String[] UI_bindings = new String[] {
					"iPhone"		,
					"PORTRAIT"		,
					"UPSIDE_PORTRAIT"		,
					"LANDSCAPE_LEFT"		,
					"LANDSCAPE_RIGHT"		,
					"ANIMATION_CURVE_EASE_IN_OUT"		,
					"TEXT_ALIGNMENT_LEFT"		,
					"TEXT_ALIGNMENT_CENTER"		,
					"TEXT_ALIGNMENT_RIGHT"		,
					"TEXT_VERTICAL_ALIGNMENT_TOP"		,
					"TEXT_VERTICAL_ALIGNMENT_CENTER"		,
					"TEXT_VERTICAL_ALIGNMENT_BOTTOM"		,
					"INPUT_BORDERSTYLE_ROUNDED"		,
					"TEXT_AUTOCAPITALIZATION_NONE"		,
					"BLEND_MODE_SOURCE_IN"		,
					"Android"		,
					"NOTIFICATION_DURATION_LONG"		,
					"FACE_UP"		,
					"FACE_DOWN"		,
					"UNKNOWN"		,
					"PICKER_TYPE_DATE"		,
					"PICKER_TYPE_TIME"		,
					"PICKER_TYPE_DATE_AND_TIME"		,
					"PICKER_TYPE_COUNT_DOWN_TIMER"		,
					"ActivityIndicator"		,
					"RETURNKEY_GO"		,
					"KEYBOARD_URL"		,
					"INPUT_BORDERSTYLE_NONE"		,
					"KEYBOARD_APPEARANCE_ALERT"		,
					"KEYBOARD_NUMBERS_PUNCTUATION"		,
					"RETURNKEY_EMERGENCY_CALL"		,
					"TEXT_AUTOCAPITALIZATION_ALL"		,
					"INPUT_BORDERSTYLE_BEZEL"		,
					"INPUT_BORDERSTYLE_LINE"		,
					"INPUT_BUTTONMODE_NEVER"		,
					"INPUT_BUTTONMODE_ALWAYS"		,
					"INPUT_BUTTONMODE_ONFOCUS"		,
					"INPUT_BUTTONMODE_ONBLUR"		,
					"RETURNKEY_DEFAULT"		,
					"RETURNKEY_GOOGLE"		,
					"RETURNKEY_JOIN"		,
					"RETURNKEY_NEXT"		,
					"RETURNKEY_ROUTE"		,
					"RETURNKEY_SEARCH"		,
					"RETURNKEY_SEND"		,
					"RETURNKEY_YAHOO"		,
					"RETURNKEY_DONE"		,
					"KEYBOARD_DEFAULT"		,
					"KEYBOARD_ASCII"		,
					"KEYBOARD_APPEARANCE_DEFAULT"		,
					"KEYBOARD_NUMBER_PAD"		,
					"KEYBOARD_PHONE_PAD"		,
					"KEYBOARD_NAMEPHONE_PAD"		,
					"KEYBOARD_EMAIL"		,
					"TEXT_AUTOCAPITALIZATION_WORDS"		,
					"TEXT_AUTOCAPITALIZATION_SENTENCES"		,
					"INPUTMODE_ALWAYS"		,
		};
		moduleBindings.put("UI", UI_bindings);
		ti.modules.titanium.ui.UIModule UI_module = new ti.modules.titanium.ui.UIModule(context);
		modules.add(UI_module);
		// App module
			
		String[] App_bindings = new String[] {
					"Properties"		,
		};
		moduleBindings.put("App", App_bindings);
		ti.modules.titanium.app.AppModule App_module = new ti.modules.titanium.app.AppModule(context);
		modules.add(App_module);
		// API module
			
		String[] API_bindings = new String[] {
		};
		moduleBindings.put("API", API_bindings);
		ti.modules.titanium.api.APIModule API_module = new ti.modules.titanium.api.APIModule(context);
		modules.add(API_module);
		// Filesystem module
			
		String[] Filesystem_bindings = new String[] {
		};
		moduleBindings.put("Filesystem", Filesystem_bindings);
		ti.modules.titanium.filesystem.FilesystemModule Filesystem_module = new ti.modules.titanium.filesystem.FilesystemModule(context);
		modules.add(Filesystem_module);
		// Media module
			
		String[] Media_bindings = new String[] {
					"NO_CAMERA"		,
					"MEDIA_TYPE_PHOTO"		,
					"MEDIA_TYPE_VIDEO"		,
					"CAMERA_FLASH_AUTO"		,
					"CAMERA_FLASH_ON"		,
					"CAMERA_FLASH_OFF"		,
					"CAMERA_REAR"		,
					"CAMERA_FRONT"		,
					"VIDEO_CONTROL_DEFAULT"		,
					"VIDEO_CONTROL_FULLSCREEN"		,
					"VIDEO_SCALING_MODE_FILL"		,
					"QUALITY_640x480"		,
					"VIDEO_CONTROL_EMBEDDED"		,
					"VIDEO_TIME_OPTION_EXACT"		,
					"VIDEO_CONTROL_NONE"		,
					"MUSIC_PLAYER_STATE_PLAYING"		,
					"MUSIC_PLAYER_STATE_STOPPED"		,
					"NO_MUSIC_PLAYER"		,
					"MUSIC_MEDIA_TYPE_ALL"		,
					"MUSIC_MEDIA_TYPE_MUSIC"		,
					"MUSIC_MEDIA_TYPE_PODCAST"		,
					"MUSIC_MEDIA_TYPE_AUDIOBOOK"		,
					"MUSIC_MEDIA_TYPE_ANY_AUDIO"		,
					"NO_VIDEO"		,
					"QUALITY_HIGH"		,
					"VIDEO_SCALING_ASPECT_FILL"		,
					"AUDIO_SESSION_MODE_PLAYBACK"		,
					"AUDIO_SESSION_MODE_AMBIENT"		,
					"AUDIO_SESSION_MODE_SOLO_AMBIENT"		,
					"AUDIO_SESSION_MODE_PLAY_AND_RECORD"		,
					"AUDIO_FORMAT_LINEAR_PCM"		,
					"AUDIO_FILEFORMAT_CAF"		,
					"AUDIO_FORMAT_ULAW"		,
					"AUDIO_FILEFORMAT_WAVE"		,
					"AUDIO_HEADSET_INOUT"		,
					"AUDIO_RECEIVER_AND_MIC"		,
					"AUDIO_HEADPHONES_AND_MIC"		,
					"AUDIO_HEADPHONES"		,
					"AUDIO_LINEOUT"		,
					"AUDIO_SPEAKER"		,
					"AUDIO_MICROPHONE"		,
					"AUDIO_MUTED"		,
					"AUDIO_UNAVAILABLE"		,
					"AUDIO_UNKNOWN"		,
					"AUDIO_SESSION_MODE_RECORD"		,
		};
		moduleBindings.put("Media", Media_bindings);
		ti.modules.titanium.media.MediaModule Media_module = new ti.modules.titanium.media.MediaModule(context);
		modules.add(Media_module);
		// JSON module
			
		String[] JSON_bindings = new String[] {
		};
		moduleBindings.put("JSON", JSON_bindings);
		ti.modules.titanium.json.JSONModule JSON_module = new ti.modules.titanium.json.JSONModule(context);
		modules.add(JSON_module);
		// Locale module
			
		String[] Locale_bindings = new String[] {
		};
		moduleBindings.put("Locale", Locale_bindings);
		ti.modules.titanium.locale.LocaleModule Locale_module = new ti.modules.titanium.locale.LocaleModule(context);
		modules.add(Locale_module);
		// Platform module
			
		String[] Platform_bindings = new String[] {
					"BATTERY_STATE_UNKNOWN"		,
					"BATTERY_STATE_UNPLUGGED"		,
					"BATTERY_STATE_CHARGING"		,
					"BATTERY_STATE_FULL"		,
		};
		moduleBindings.put("Platform", Platform_bindings);
		ti.modules.titanium.platform.PlatformModule Platform_module = new ti.modules.titanium.platform.PlatformModule(context);
		modules.add(Platform_module);
		// Accelerometer module
			
		String[] Accelerometer_bindings = new String[] {
		};
		moduleBindings.put("Accelerometer", Accelerometer_bindings);
		ti.modules.titanium.accelerometer.AccelerometerModule Accelerometer_module = new ti.modules.titanium.accelerometer.AccelerometerModule(context);
		modules.add(Accelerometer_module);
		// Map module
			
		String[] Map_bindings = new String[] {
					"ANNOTATION_RED"		,
					"ANNOTATION_GREEN"		,
					"ANNOTATION_PURPLE"		,
					"STANDARD_TYPE"		,
					"SATELLITE_TYPE"		,
					"HYBRID_TYPE"		,
		};
		moduleBindings.put("Map", Map_bindings);
		ti.modules.titanium.map.MapModule Map_module = new ti.modules.titanium.map.MapModule(context);
		modules.add(Map_module);
		// Network module
			
		String[] Network_bindings = new String[] {
					"INADDR_ANY"		,
					"READ_WRITE_MODE"		,
					"NOTIFICATION_TYPE_BADGE"		,
					"NOTIFICATION_TYPE_ALERT"		,
					"NOTIFICATION_TYPE_SOUND"		,
		};
		moduleBindings.put("Network", Network_bindings);
		ti.modules.titanium.network.NetworkModule Network_module = new ti.modules.titanium.network.NetworkModule(context);
		modules.add(Network_module);
		// XML module
			
		String[] XML_bindings = new String[] {
		};
		moduleBindings.put("XML", XML_bindings);
		ti.modules.titanium.xml.XMLModule XML_module = new ti.modules.titanium.xml.XMLModule(context);
		modules.add(XML_module);
		// Geolocation module
			
		String[] Geolocation_bindings = new String[] {
					"ACCURACY_BEST"		,
					"ACCURACY_NEAREST_TEN_METERS"		,
					"ACCURACY_HUNDRED_METERS"		,
					"ACCURACY_KILOMETER"		,
					"ACCURACY_THREE_KILOMETERS"		,
		};
		moduleBindings.put("Geolocation", Geolocation_bindings);
		ti.modules.titanium.geolocation.GeolocationModule Geolocation_module = new ti.modules.titanium.geolocation.GeolocationModule(context);
		modules.add(Geolocation_module);
		// Contacts module
			
		String[] Contacts_bindings = new String[] {
		};
		moduleBindings.put("Contacts", Contacts_bindings);
		ti.modules.titanium.contacts.ContactsModule Contacts_module = new ti.modules.titanium.contacts.ContactsModule(context);
		modules.add(Contacts_module);
		// Database module
			
		String[] Database_bindings = new String[] {
		};
		moduleBindings.put("Database", Database_bindings);
		ti.modules.titanium.database.DatabaseModule Database_module = new ti.modules.titanium.database.DatabaseModule(context);
		modules.add(Database_module);
		// Facebook module
			
		String[] Facebook_bindings = new String[] {
		};
		moduleBindings.put("Facebook", Facebook_bindings);
		ti.modules.titanium.facebook.FacebookModule Facebook_module = new ti.modules.titanium.facebook.FacebookModule(context);
		modules.add(Facebook_module);
		// Utils module
			
		String[] Utils_bindings = new String[] {
		};
		moduleBindings.put("Utils", Utils_bindings);
		ti.modules.titanium.utils.UtilsModule Utils_module = new ti.modules.titanium.utils.UtilsModule(context);
		modules.add(Utils_module);
		// Gesture module
			
		String[] Gesture_bindings = new String[] {
		};
		moduleBindings.put("Gesture", Gesture_bindings);
		ti.modules.titanium.gesture.GestureModule Gesture_module = new ti.modules.titanium.gesture.GestureModule(context);
		modules.add(Gesture_module);
		// Yahoo module
			
		String[] Yahoo_bindings = new String[] {
		};
		moduleBindings.put("Yahoo", Yahoo_bindings);
		ti.modules.titanium.yahoo.YahooModule Yahoo_module = new ti.modules.titanium.yahoo.YahooModule(context);
		modules.add(Yahoo_module);
	}
	
	@Override
	public String[] getFilteredBindings(String moduleName) {
		return moduleBindings.get(moduleName);
	}
}
